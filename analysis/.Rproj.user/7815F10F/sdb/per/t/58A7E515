{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Pine Environment Summary\"\nauthor: \"Katie Lotterhos\"\ndate: \"April 24, 2015\"\noutput: html_document\n---\n\nThis is a summary of the environmental data that was used for the bayenv2 analysis for the pine data.\n\n\n```{r, echo=FALSE}\n#install.packages(\"factoextra\")\nlibrary(factoextra)\n```\n\nsetwd(\"../enviPC\")\n### Principal components of the environmental variables used in this study\n\n\n```{r}\nenv <- read.table(\"var_out_pine_all_COMBINED.table.contig_flt10.bayenv.envi2\")\n#head(env)\n\nin2 <- t (env)\nnam1 <- read.table(\"../enviPC/enviNamesAllAnalyses.txt\")\ndim(in2)\ncolnames(in2) <- nam1$V1\nin3 <- prcomp (in2, scale. = T)\nstr(in3)\nscores <- t (in3$x)\n\nbarplot(in3$sdev, ylab=\"Standard Deviation\", names.arg = 1:22, xlab=\"PC axis\")\n\n# Eigenvalues\neig <- (in3$sdev)^2\n# Variance in Percentage\nvariance <- eig*100/sum(eig)\n# Cumulative variances\ncumvar <- cumsum(variance)\nperVar <- data.frame(eig = eig, variance = variance,\n                     cumvariance = cumvar)\nperVar\n  # first 3 explain 80% of variance\n```\n\n### Correlation of variables onto Prin Comp\n```{r}\npa <- fviz_pca_var(in3, )\n#fviz_pca_var(in3, axes = c(2,3))\npb <- fviz_pca_var(in3, axes = c(1,3))\n\npar(mfrow=c(2,1))\np1 = fviz_pca_var(in3, col.var=\"contrib\")+\nscale_color_gradient2(low=\"lightgrey\", mid=\"grey\", \n      high=\"blue\", midpoint=4) + theme_minimal()\n\np2 <- fviz_pca_var(in3, col.var=\"contrib\", axes=c(1,3))+\nscale_color_gradient2(low=\"lightgrey\", mid=\"grey\", \n      high=\"blue\", midpoint=4) + theme_minimal()\n\n# Multiple plot function\n#\n# ggplot objects can be passed in ..., or to plotlist (as a list of ggplot objects)\n# - cols:   Number of columns in layout\n# - layout: A matrix specifying the layout. If present, 'cols' is ignored.\n#\n# If the layout is something like matrix(c(1,2,3,3), nrow=2, byrow=TRUE),\n# then plot 1 will go in the upper left, 2 will go in the upper right, and\n# 3 will go all the way across the bottom.\n#\nmultiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {\n  library(grid)\n\n  # Make a list from the ... arguments and plotlist\n  plots <- c(list(...), plotlist)\n\n  numPlots = length(plots)\n\n  # If layout is NULL, then use 'cols' to determine layout\n  if (is.null(layout)) {\n    # Make the panel\n    # ncol: Number of columns of plots\n    # nrow: Number of rows needed, calculated from # of cols\n    layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),\n                    ncol = cols, nrow = ceiling(numPlots/cols))\n  }\n\n if (numPlots==1) {\n    print(plots[[1]])\n\n  } else {\n    # Set up the page\n    grid.newpage()\n    pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))\n\n    # Make each plot, in the correct location\n    for (i in 1:numPlots) {\n      # Get the i,j matrix positions of the regions that contain this subplot\n      matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))\n\n      print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,\n                                      layout.pos.col = matchidx$col))\n    }\n  }\n}\n\nmultiplot(pa, pb, cols=1)\n\nmultiplot(p1, p2, cols=1)\n  # colored by their average contribution to the variance in the two PC axes pictured\n\npdf(\"../results/PCloadings.pdf\", width=5, height=8.5)\n  multiplot(p1, p2, cols=1)\ndev.off()\n\n# with colors\n# Helper function : \n# Correlation between variables and principal components\nvar_cor_func <- function(var.loadings, comp.sdev){\n  var.loadings*comp.sdev\n}\n\n# Variable correlation/coordinates\n  loadings <- in3$rotation\n  apply(abs(loadings), 2, max)\n    # maximum loading of a variable in first 3 PC axes is < 0.38\n  loadings[,1:5]\n\nsdev <- in3$sdev\nsdev\nvar.coord <- var.cor <- t(apply(loadings, 1, var_cor_func, sdev))\nhead(var.coord[, 1:4])\n\nvar.cos2 <- var.coord^2\nhead(var.cos2[, 1:4])\ncomp.cos2 <- apply(var.cos2, 2, sum)\n#The contribution of a variable to a given principal component is (in percentage) : (var.cos2 * 100) / (total cos2 of the component)\ncontrib <- function(var.cos2, comp.cos2){var.cos2*100/comp.cos2}\nvar.contrib <- t(apply(var.cos2,1, contrib, comp.cos2))\ncolSums(var.contrib)\nvar.contrib[, 1:4]\n\npar(mfrow=c(1,1), mar=c(4,4,1,1))\nplot(loadings[,1:4], var.contrib[, 1:4])\n# maximum contribution to any one variable in PC1 is < 10%, in PC2 is < 15%, and in PC3 is < 15%\n```\n\nContribution to variance of an individual environment $i$ to PC axis $j$ is:\n\n$\\frac{(l_{ij}\\sigma_j)^2}{\\sum_i (l_{ij}\\sigma_j)^2}$\n\nwhere l_i is the loading of environment i onto PC axis j, $\\sigma_j$ is the standard deviation of PC axis j. \n\n#### Distribution of environments along PC axes\n```{r}\nloadings <- in3$rotation\ndim(loadings)\n\n```\n\n#### Table and graphs of loadings for first 5 PC axes\n```{r}\ndata.frame(as.character(nam1$V1), loadings[,1:5])\n```\n\nNote that the y-axis in the following graphs are meaningless, environments are just stacked for easy readability.\n\n```{r}\n  par(mfrow=c(3,1), mar=c(4,0,0,0))\n  makePCplot <- function(pc){\n    plot(loadings[,pc], (rank(loadings[,pc])), bty=\"l\", yaxt=\"n\", ylab=\"\", xlab=paste(\"PC\", pc), col=0, xlim=c(min(loadings[,pc])*1.1, max(loadings[,pc])*1.1))\n    text(loadings[,pc], (rank(loadings[,pc])), as.character(nam1$V1))\n  }\n  for (i in 1:3){\n  makePCplot(i)\n  }\n```\n\n### Information about this R session\n```{r}\nsessionInfo()\n```\n",
    "created" : 1501771817595.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2455055615",
    "id" : "58A7E515",
    "lastKnownWriteTime" : 1501954280,
    "last_content_update" : 1501954280806,
    "path" : "~/Desktop/CurrResearch/1-AdaptreeData/201509_PEGA/20170701Submit/dryad/enviPC/environmentSummaryV2.Rmd",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}